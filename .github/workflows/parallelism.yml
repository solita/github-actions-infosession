name: Production demo showcasing parallelism
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - main
jobs:
  Setup_Codebase:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

  Install_Dependencies:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🍏 This job's status is ${{ job.status }}."

  Run_Development_Tests:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: echo "Want to know my variable "REPO_VARIABLE"? It's '${{vars.REPO_VARIABLE}}'" => based on the repo
      - run: echo "Let me tell you a little secret "REPO_SECRET"! ${{secrets.REPO_SECRET}}" => based on the repo

  Warn_Change_Management:
    runs-on: ubuntu-latest
    needs: Run_Development_Tests
    environment: production
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosting by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: echo "You know my variable "REPO_VARIABLE"? Now for the production environment this is '${{vars.REPO_VARIABLE}}'"

  Build_Production_Artifact:
    runs-on: ubuntu-latest
    needs: 
    - Setup_Codebase
    - Install_Dependencies
    - Run_Development_Tests
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🍏 This job's status is ${{ job.status }}."

  Deploy_Artifact_to_Storage:
    runs-on: ubuntu-latest
    needs:
    - Build_Production_Artifact
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🍏 This job's status is ${{ job.status }}."

  Deploy_to_Production:
    runs-on: ubuntu-latest
    needs: 
    - Run_Development_Tests
    - Deploy_Artifact_to_Storage
    - Warn_Change_Management
    environment: production
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: echo "DEPLOY TO PRODUCTION IS COMPLETE. VISIT https://shouldideploy.today/ TO SEE YOUR DEPLOYMENT!"

  Trigger_Slack_API:
      runs-on: ubuntu-latest
      needs: Deploy_to_Production
      steps:
        - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
        - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
        - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
        - run: echo "🍏 This job's status is ${{ job.status }}."